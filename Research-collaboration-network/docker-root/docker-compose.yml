version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: research_hub_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: research_hub
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./docker-backend
      dockerfile: Dockerfile
    container_name: research_hub_api
    environment:
      NODE_ENV: development
      DB_USER: postgres
      DB_HOST: postgres
      DB_NAME: research_hub
      DB_PASSWORD: postgres
      DB_PORT: 5432
      JWT_SECRET: your-secret-key-here
      JWT_EXPIRY: 24h
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SECURE: 'false'
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-specific-password
      SMTP_FROM: ResearchHub <noreply@researchhub.com>
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./docker-backend:/app
      - /app/node_modules
      - uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "npm rebuild bcrypt --build-from-source &&
             npm run dev"

volumes:
  postgres_data:
  uploads:
